<div class="row">
    <div class="col-sm-1"></div>

    <div class="col-sm-8">
        <div class="row order-index-headers" style="text-align: left;">
            <div class="col-sm-6">
                <h2>Orders</h2>
            </div>

            <!-- sort and filter icons/buttons -->
            <div class="col-sm-6" class="sort-filter-div" style="display: flex; justify-content: flex-end; align-items: flex-end; padding-right: 40px">
                
                <!-- sort -->
                <a href="#" class="sort-filter mr-2" id="sort-button">
                    <p style="margin-bottom: 0.5rem;">
                        <i class="fas fa-sort-amount-up"></i> Sort
                    </p>
                </a>
                <select class="custom-select mr-1" style="width: 120px; display: none;" name="by" id="sort-by"></select>
                <select class="custom-select mr-2" style="width: 120px; display: none;" id="sort-text">
                    <option value="ascending">Ascending</option>
                    <option value="descending">Descending</option>
                </select>

                <!-- filter -->
                <a href="#" class="sort-filter" id="filter-button">
                    <p style="margin-bottom: 0.5rem;">
                        <i class="fas fa-filter"></i> Filter
                    </p>
                </a>
                <select class="custom-select mx-1" style="width: 120px; display: none;" name="by" id="filter-by"></select>
                <input class="form-control" style="width: 120px; display: none;" type="text" name="filter" id="filter-text"> 

            </div>
            
        </div>

        <!-- table of orders -->
        <table class="table">
            <thead class="thead-dark">
                <tr id="table-header-names">
                    <th scope="col">#</th>
                    <th scope="col">Name</th>
                    <th scope="col">Product</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Address</th>
                    <th scope="col">Deliver by</th>
                    <th scope="col">Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(x => { %>
                    <tr>
                        <th scope="row"><%= orders.indexOf(x) + 1 %></th>
                        <td class="name"><%= x.customer.name %> </td>
                        
                        <td class="product">
                            <% x.orders.forEach(y => { %>
                            <p><%= y.product %></p>
                            <% }) %>
                        </td>
                        
                        <td class="quantity">
                            <% x.orders.forEach(y => { %>
                            <p><%= y.quantity %></p>
                            <% }) %>
                        </td>
                        
                        <td class="address"><%= x.customer.address %> </td>
                        <td class="deliver by"><%= x.shortenDate() %> </td>
                        <td class="status"><%= x.status %> </td>
                        <td>
                            <form action="/order/edit/<%= x._id %>" method="GET">
                                <button class="btn btn-warning">View/edit</button>
                            </form>
                        </td>
                    </tr>
                    
                <% }) %>
            </tbody>
        </table>

        <form action="/order/new" method="GET" style="display: flex; justify-content: center; margin-bottom: 100px;">
            <button class="btn btn-warning" id="new-order-button"><i class="fas fa-plus" id="new-order-icon"></i></button>
        </form>

    </div>

    <!-- statistics board -->
    <div class="col-sm-3">
        <div class="row order-index-headers" style="text-align: left;">
            <h2>Statistics</h2>
        </div>

        <div class="card text-center" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Deliveries today: </h5>
                <h1 class="card-text"><%= deliveriesToday.length %> </h1>
            </div>
        </div>
        
        <div class="card text-center" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Orders today: </h5>
                <h1 class="card-text"><%= ordersToday.length %> </h1>
            </div>
        </div>
        
        <div class="card text-center" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Total unfulfilled: </h5>
                <h1 class="card-text"><%= unfulfilled.length %> </h1>
            </div>
        </div>

        <div class="card text-center" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Total overdue: </h5>
                <h1 class="card-text"><%= overdue.length %> </h1>
            </div>
        </div>

        <div class="card text-center" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Most popular product: </h5>
                <h2 class="card-text" style="font-weight: 600;"><%= mostPopular[0]._id %> </h2>
            </div>
        </div>
    </div>
</div>




<!-- filter and sort buttons -->
<script>

    //==================== filter button ====================//

    let $filterBy = document.getElementById("filter-by");
    let $filterText = document.getElementById("filter-text");
    let $filterBtn = document.getElementById("filter-button");
    let $table = document.querySelector("tbody");
    let $headers = document.getElementById("table-header-names");


    let headers = Array.from($headers.children)
        .map(x => x.textContent)
        .filter(x => x.match(/\w+/i)); //[name, address, ...]

    //hide input bars
    $filterBtn.addEventListener("click", function() {
        if ($filterBy.style.display === "none") $filterBy.style.display = "";
        else $filterBy.style.display = "none";
        if ($filterText.style.display === "none") $filterText.style.display = "";
        else $filterText.style.display = "none";
    });

    //populate drop down bar (filter by:)
    headers.forEach(header => {
        let $newOption = document.createElement("option");
        $newOption.textContent = header;
        $newOption.value = header;
        $filterBy.appendChild($newOption);
    });

    //filter function
    $filterText.addEventListener("input", function() {

        let filterArr = Array.from(document.getElementsByClassName(`${$filterBy.value.toLowerCase()}`));
        
        for (let i = 0; i < filterArr.length; i++) {

            if (filterArr[i].textContent.toLowerCase().indexOf($filterText.value) > -1) {
                $table.children[i].style.display = "";
            }
            else {
                $table.children[i].style.display = "none";
            }
        }
    });

    console.log(document.getElementsByClassName("date"));


    //==================== sort button ====================//


    let $sortBtn = document.getElementById("sort-button");
    let $sortBy = document.getElementById("sort-by");
    let $sortText = document.getElementById("sort-text");
    let $tableRows = document.querySelectorAll("tbody>tr");

    //hide input bars
    $sortBtn.addEventListener("click", function() {
        if ($sortBy.style.display === "none") $sortBy.style.display = "";
        else $sortBy.style.display = "none";
        if ($sortText.style.display === "none") $sortText.style.display = "";
        else $sortText.style.display = "none";
    });

    //populate sort-by drop down
    headers.forEach(header => {
        let $newOption = document.createElement("option");
        $newOption.textContent = header;
        $newOption.value = header;
        $sortBy.appendChild($newOption);
    });

    //sort listener
    $sortBy.addEventListener("change", function() {
        
        //gets values for a property set by $sortBy
        let arrToSort = Array
            .from(document.getElementsByClassName(`${$sortBy.value.toLowerCase()}`))
            .map(x => x.innerText);

        console.log(arrToSort);

        if ($sortBy.value.toLowerCase() === "product") {
            if ($sortText.value === "ascending") {
                //let productsToSort = arrToSort.map(x => x.match(/\w+(\s\w+)?/gi).length); //[blue chair, red chair, ...]
            }
            else {

            } 
        }   

        else {
            if ($sortText.value === "ascending") {
                sortArray(arrToSort);
            }
            else {
                
            } 
        }
        
    });

    //$table.insertBefore($table.childNodes[3], $table.childNodes[0]);
    //(2n-1) to select node in $table.childNodes

    //sort function
    //keeps running an infinite loop
    // function sortArray(arr) {
    //     let shouldSwitch = false;
    //     let switching = true;

    //     while (switching) {
    //         switching = false;

    //         for (let i = 0; i < arr.length - 1; i++) {
    //             shouldSwitch = false;
    //             if (arr[i] > arr[i + 1]) {
    //                 $table.insertBefore($table.childNodes[2 * (i + 1) + 1], $table.childNodes[2 * i + 1]);
    //                 shouldSwitch = true;
    //                 console.log("switched");
    //                 break;
    //             }
    //         }
    //         if (shouldSwitch) {
    //             switching = true;
    //         }
    //     }
    // }

    function sortArray(arr) {
        let mapped = arr
            .map((e, i) => {
                return { oldIndex: i, value: e[0] };
            })
            .sort((a, b) => {
                if (a.value > b.value) {
                    return 1;
                }
                if (a.value < b.value) {
                    return -1;
                }
                return 0;
            });

        for (let i = 0 ; i < mapped.length ; i++) {
            let oldIndex = mapped[i].oldIndex;
            let newIndex = i;
            $table.appendChild($tableRows[oldIndex]);    
        }
    }

    // $table.insertBefore($tableRows[2], $tableRows[0])



</script>